version: '3.8'

services:
  todoapp-blazor:
    image: mycompanyname/todoapp-blazor:latest
    container_name: todoapp-blazor
    build:
      context: ../../
      dockerfile: src/ToDoApp.Blazor/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80;
      - Kestrel__Certificates__Default__Path=/root/certificate/localhost.pfx
      - Kestrel__Certificates__Default__Password=91f91912-5ab0-49df-8166-23377efaf3cc
      - App__SelfUrl=https://localhost:44308
      - AuthServer__RequireHttpsMetadata=false  
      - AuthServer__Authority=http://todoapp-blazor
      - ConnectionStrings__Default=mongodb://mongodb/ToDoApp
    ports:
      - "44308:443"
    depends_on:
      - db-migrator
    restart: on-failure
    volumes:
      - ./certs:/root/certificate
    networks:
      - abp-network

  db-migrator:
    image: mycompanyname/todoapp-db-migrator:latest
    container_name: db-migrator
    build:
      context: ../../
      dockerfile: src/ToDoApp.DbMigrator/Dockerfile.local
    environment:
      - ConnectionStrings__Default=mongodb://mongodb/ToDoApp
    depends_on:
      mongo-db:
        condition: service_healthy
    networks:
      - abp-network    
  
  mongodb:
    container_name: mongodb
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
       - mongodb_data:/data/db
    networks:
      - abp-network
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 10    
volumes:
  mongodb_data:
    name: todoapp_mongodb_data  
networks:
  abp-network:
    name: todoapp-network
    driver: bridge